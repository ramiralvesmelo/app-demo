name: CI Java com Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      project_dir:
        description: "Diretório do projeto (ex.: app/ ou . para raiz)"
        required: false
        default: "."
      module_gav:
        description: "GAV do módulo alvo (ex.: :app-demo). Deixe vazio para build completo"
        required: false
        default: ""

permissions:
  contents: read
  packages: write

jobs:
  construir:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: 📥 Checkout do repositório
        uses: actions/checkout@v4

      - name: ⚙️ Configurar JDK 17 + cache Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 🛠️ Compilar e executar testes (gera JaCoCo)
        working-directory: ${{ github.event.inputs.project_dir }}
        run: |
          set -e
          if [ -n "${{ github.event.inputs.module_gav }}" ]; then
            echo ">> Build apenas do módulo ${{ github.event.inputs.module_gav }}"
            mvn -B -V -DskipTests=false -am -pl "${{ github.event.inputs.module_gav }}" clean verify jacoco:report
          else
            echo ">> Build do projeto completo em $PWD"
            mvn -B -V -DskipTests=false clean verify jacoco:report
          fi
# ⚠️ Atenção:
# Esse passo deve ser usado apenas se o projeto estiver configurado com "CI-based Analysis" no SonarCloud.
# Se o modo "Automatic Analysis (AutoScan)"estiver ativo, a execução do sonar:sonar irá falhar.
# Para usar este passo, vá em SonarCloud → Administration → Analysis Method e troque de AutoScan para CI-based.
#      - name: 🔎 SonarCloud Scan (Maven)
#        working-directory: ${{ github.event.inputs.project_dir }}
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          mvn -B sonar:sonar \
#            -Dsonar.projectKey=ramiralvesmelo_app-demo \
#            -Dsonar.organization=ramiralvesmelo \
#            -Dsonar.host.url=https://sonarcloud.io \
#            -Dsonar.token=${SONAR_TOKEN} \
#            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: 📈 Enviar cobertura para Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # recomendado mesmo em repo público
          files: ${{ github.event.inputs.project_dir }}/target/site/jacoco/jacoco.xml
          fail_ci_if_error: true

      - name: 📦 Listar artefatos gerados
        working-directory: ${{ github.event.inputs.project_dir }}
        run: |
          echo "== Pastas target =="
          find . -type d -name target -print || true
          echo "== JAR/WAR encontrados =="
          find . -type f \( -name "*.jar" -o -name "*.war" \) -print || true

      - name: 🧪 Upload de relatórios de teste (Surefire/Failsafe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maven-test-reports
          path: |
            ${{ github.event.inputs.project_dir }}/**/target/surefire-reports/**
            ${{ github.event.inputs.project_dir }}/**/target/failsafe-reports/**
          if-no-files-found: ignore

      - name: 📤 Upload de artefatos (JAR/WAR)
        uses: actions/upload-artifact@v4
        with:
          name: maven-targets
          path: |
            ${{ github.event.inputs.project_dir }}/**/target/*.jar
            ${{ github.event.inputs.project_dir }}/**/target/*.war
          if-no-files-found: warn

      - name: 📊 Dependency Graph / Dependabot snapshot
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false
        uses: advanced-security/maven-dependency-submission-action@v4

      - name: 🔐 Configurar credenciais Maven (settings.xml) para GitHub Packages
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<'XML'
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${env.GITHUB_ACTOR}</username>
                <password>${env.GITHUB_TOKEN}</password>
              </server>
            </servers>
          </settings>
          XML
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Deploy no GitHub Packages (Maven)
        if: github.event_name != 'pull_request'
        working-directory: ${{ github.event.inputs.project_dir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER_REPO="${{ github.repository }}"
          mvn -B -V -s ~/.m2/settings.xml \
            -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${OWNER_REPO} \
            deploy
